local rendercam = require('rendercam.rendercam')
local houses = {'house1', 'house2', 'house3'}
local animals = {
    'baloon', 
    'bear', 
    'bike', 
    'bird', 
    'cat', 
    'chair', 
    'chicken', 
    'cow', 
    'crab', 
    'dog', 
    'ghost', 
    'gingerbread', 
    'mushroom', 
    'owl', 
    'pumpkin',
    'teapot'
}

function init(self)
    math.randomseed(os.time())
    math.random()
    self.house_index = math.random(#houses)
    self.animal_index = math.random(#animals)
    msg.post('.', 'acquire_input_focus')
    -- msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })
end

local function process_touch(action) 
    if action.pressed then 
        local pos = rendercam.screen_to_world_2d(action.screen_x, action.screen_y)
        local x = physics.raycast(pos - vmath.vector3(0, 0, -100), pos + vmath.vector3(0, 0, -100), {hash("default")})
        if x then 
            msg.post(x.id, 'pressed')
        end
    end
end

function on_input(self, action_id, action) 
    -- pprint(rendercam.screen_to_world_2d(action.screen_x, action.screen_y))
    if action_id == hash('touch') then 
        process_touch(action)
    elseif action_id == hash('multitouch') then
        -- pprint(action.touch)
        for _, action in pairs(action.touch) do
            process_touch(action)
        end
    end
end

function on_message(self, message_id, message, sender)
    if message_id == hash("placeholder/init") then
        self.house_index = self.house_index + 1
        self.animal_index = self.animal_index + 1
        msg.post(sender, 'house/init', {
            house = houses[self.house_index % #houses + 1],
            animal = animals[self.animal_index % #animals + 1]
        })
    end
end