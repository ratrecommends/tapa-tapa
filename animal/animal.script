go.property('speed', 1.7)
go.property('delay', 2)

function init(self)
    go.set_scale(0.1, 'view')
end

function on_message(self, message_id, message, sender)
    if message_id == hash('animal/walk') then
        go.animate('view', 'scale', go.PLAYBACK_ONCE_FORWARD, vmath.vector3(1), go.EASING_OUTBACK, 0.5)
        go.animate('view', 'rotation', go.PLAYBACK_ONCE_FORWARD, vmath.quat_rotation_z(math.rad(-15)), go.EASING_INOUTQUINT, self.speed / 2, self.delay, function () 
            go.animate("view", "rotation", go.PLAYBACK_LOOP_PINGPONG, vmath.quat_rotation_z(math.rad(15)), go.EASING_INOUTQUINT, self.speed)
            
        end)
        timer.delay(self.delay * 1.25, false, function() 
            local delta = vmath.rotate(message.direction, vmath.vector3(1000, 0, 0))
            go.animate('.', 'position', go.PLAYBACK_ONCE_FORWARD, go.get_position() + delta, go.EASING_LINEAR, 10, 0, function()
                go.delete('.', true)
            end)
        end)
        go.animate("view", "position.y", go.PLAYBACK_LOOP_PINGPONG, 10, go.EASING_INOUTBOUNCE, self.speed * 0.5, self.delay)
    end
end